// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id    String @id @default(uuid())
  name  String
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  token    LoginToken?
  sessions Session[]
  Template Template[]
}

model LoginToken {
  id        String   @id @default(uuid())
  redirect  String   @default("/")
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@index(userId)
}

model Session {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())

  User   User   @relation(fields: [userId], references: [id])
  userId String

  exercises ExercisesOnSessions[]

  @@index(userId)
}

model Exercise {
  id   String @id @default(uuid())
  name String @unique

  sessions  ExercisesOnSessions[]
  templates ExercisesOnTemplates[]
}

model Set {
  id     String @id @default(uuid())
  weight Int
  reps   Int

  exercises SetsOnExercises[]

  @@unique([weight, reps])
}

model SetsOnExercises {
  id                  String              @id @default(uuid())
  exerciseOnSession   ExercisesOnSessions @relation(fields: [exerciseOnSessionId], references: [id])
  exerciseOnSessionId String
  set                 Set                 @relation(fields: [setId], references: [id])
  setId               String
  createdAt           DateTime            @default(now())

  @@index([exerciseOnSessionId])
  @@index([setId])
}

model ExercisesOnSessions {
  id         String   @id @default(uuid())
  session    Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId  String
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId String
  createdAt  DateTime @default(now())

  setsOnExercises SetsOnExercises[]

  @@unique([sessionId, exerciseId])
  @@index([sessionId])
  @@index([exerciseId])
}

model Template {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())

  User   User   @relation(fields: [userId], references: [id])
  userId String

  exercises ExercisesOnTemplates[]

  @@index([userId])
}

model ExercisesOnTemplates {
  id         String    @id @default(uuid())
  template   Template  @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateId String
  exercise   Exercise? @relation(fields: [exerciseId], references: [id])
  exerciseId String?

  @@unique([templateId, exerciseId])
  @@index([templateId])
  @@index([exerciseId])
}
